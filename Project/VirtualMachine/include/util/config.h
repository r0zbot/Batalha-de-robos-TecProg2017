#ifndef VIRTUALMACHINE_CONFIG_H
#define VIRTUALMACHINE_CONFIG_H

#define LOGGING_LEVEL DEBUG ///< The currently Logging Level being used in the system.

/**
 * @file config.h
 * @class Config
 *
 * @brief This class stores configuration settings for the system.
 */
class Config {

    /// These properties below are set in main.cpp, which is generated by the manager/builder
    public:
        static unsigned int available_crystals;         ///< The amount of crystals available to be spread through all the cells.

        static unsigned int machine_instructions_cycle; ///< Number of cycles that a {@link #Machine} can execute in a single operation.
        static unsigned int machine_inventory_size;     ///< Max amount of crystals that a {@link #Machine} can carry.
        static unsigned int machine_health;             ///< Initial health capacity for {@link #Machine}.
        static unsigned int machine_long_attack;        ///< Damage inflicted by a long range attack.
        static unsigned int machine_melee_attack;       ///< Damage inflicted by a melee attack.
        static unsigned int machine_short_attack;       ///< Damage inflicted by a short range attack.

        static double machine_fuel;                     ///< Amount of fuel an {@link #Machine} can hold.
        static double machine_mov_fuel_usage;           ///< Amount of fuel an {@link #Machine} uses to move to the next cell.
        static double machine_inst_fuel_usage;          ///< Quantity of fuel used during the execution of one instruction.

        static unsigned int max_crystals_per_cell;      ///< The maximum amount of crystals a single cell can hold.
};

//extern int lastRobotPos; //TODO: remove this after implementing army bases

#endif
